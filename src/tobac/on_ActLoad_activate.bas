' ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
'< callback modul generated by utility                         GladeToBac V3.0 >
'< callback-Modul erzeugt von                                                  >
'< Generated at / Generierung am                             2011-05-14, 13:44 >
' -----------------------------------------------------------------------------
'< Main/Haupt Program name: GladeToBac.bas                                     >
'<  Email:  Thomas[ dot ]Freiherr{ at }gmx{ dot }net                           >
'<    WWW:  www.freebasic-portal.de                                            >
' -----------------------------------------------------------------------------
'< callback SUB/FUNCTION                                          insert code! >
'< Ereignis Unterprogramm/Funktion                        Quelltext einfuegen! >
' vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv

SUB on_ActLoad_activate CDECL ALIAS "on_ActLoad_activate" ( _
  BYVAL action AS GtkAction PTR, _
  BYVAL user_data AS gpointer) EXPORT

VAR wid = gtk_file_chooser_dialog_new( _
             __("Load GUI-XML-file:"), NULL, GTK_FILE_CHOOSER_ACTION_OPEN, _
             GTK_STOCK_CANCEL, GTK_RESPONSE_CANCEL, _
             GTK_STOCK_OPEN, GTK_RESPONSE_ACCEPT, _
             NULL)
WITH _UI_
  VAR cho = GTK_FILE_CHOOSER(wid)

  VAR p = .Xml.Path
  IF LEN(p) = 0 THEN IF SLASH = "/" THEN p = .Xml.LPath ELSE p = .Xml.WPath
  IF LEN(p) = 0 THEN p = .S_Path
  gtk_file_chooser_set_current_folder(cho, SADD(p))

  VAR filter = gtk_file_filter_new()
  gtk_file_filter_set_name(filter, "GtkBuilder (*" & SufUi & ")")
  gtk_file_filter_add_pattern(filter, @("*" & SufUi))
  gtk_file_chooser_add_filter(cho, filter)

  filter = gtk_file_filter_new()
  gtk_file_filter_set_name(filter, "Glade (*" & SufGla & ")")
  gtk_file_filter_add_pattern(filter, "*" & SufGla)
  gtk_file_chooser_add_filter(cho, filter)

  gtk_window_set_transient_for(GTK_WINDOW(wid), GTK_WINDOW(GUI.WinMain))
  VAR r = gtk_dialog_run(GTK_DIALOG(wid))
  IF r = GTK_RESPONSE_ACCEPT THEN
    VAR f = gtk_file_chooser_get_filename(cho), n = *f
    IF f THEN g_free(f) : .Load(n)
  END IF

  gtk_widget_destroy(wid)
END WITH

END SUB
